preg_replace()			执行一个正则表达式的搜索和替换
preg_match()			执行一个正则表达式匹配
preg_filter()			执行一个正则表达式搜索和替换
preg_grep()			返回匹配模式的数组条目
preg_last_error()			返回最后一个PCRE正则执行产生的错误代码
preg_match_all()			执行一个全局正则表达式匹配
preg_quote()			转义正则表达式字符
preg_replace_callback_array()		执行一个正则表达式搜索并且使用一个回调进行替换
preg_replace_callback()		执行一个正则表达式搜索并且使用一个回调进行替换
preg_split()			通过一个正则表达式分隔字符串
基本规则：/规则/

转义字符
\d		匹配所有数字，相当于[0-9]
\D		表示非数字，\d的反面，相当于[^0-9]
\w		匹配所有字母、数字、汉字、下划线等[0-9a-zA-Z_]
\W		取反，表示非字母、数字、汉字、下划线[^0-9a-zA-z_]
\s		表示空格
\S		表示非空格
.		表示匹配任意字符，慎用！（要匹配.本身需要加\.表示不转义）

量词
{n,m}		表示匹配n-m次
{n}		刚好匹配n次
{n,}		最少匹配两次
*		任意匹配次，即可有可无，多了不限，也可以这样表示{0,}
？		表示匹配0次或1次，表示{0,1}
+		表示至少匹配1次，等价于{1,}

修饰
^		表示以什么开头（^用在区间中，则表示取反,比如/[^123]/;意思是匹配非123）
$		表示以什么结尾

总结符
/i		表示大小写不敏感（写在正则结尾/后）
/g		全文查找出现的所有匹配字符
/m		多行查找
/gi		全文查找、忽略大小写
/ig		全文查找、忽略大小写

使用
replace 替换	字符串.replace(/规则/,"替换内容",'需要替换的字符串')
例子：
过滤特殊字符
        $str = '<dhaskjdha>sl>495《》》》》》《《《5d<khas<ld!@#$%^&*()！@#￥%……&*（）——+_+ssa？？？？？？？？？？？？？？';
        $strs = preg_replace('/[<!@#$%^&*()！@#￥%……&*（）——+_+>《》？?{}]/','',$str);
        dump($strs);		//输出结果：dhaskjdhasl4955dkhasldssa